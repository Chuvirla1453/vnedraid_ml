#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LOCAL_IMAGE_NAME="auxxxxx/vnedreid2025-ml_model:latest"
DOCKER_USERNAME="auxxxxx"
REPOSITORY_NAME="vnedreid2025-ml_model"
TAG="latest"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo -e "${BLUE}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [OPTIONS]${NC}"
    echo -e "${BLUE}–û–ø—Ü–∏–∏:${NC}"
    echo -e "  -u, --username USERNAME    Docker Hub username (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: auxxxxx)"
    echo -e "  -r, --repository REPO      –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: vnedreid2025-ml_model)"
    echo -e "  -t, --tag TAG             –¢–µ–≥ –æ–±—Ä–∞–∑–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: latest)"
    echo -e "  -h, --help                –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo
    echo -e "${BLUE}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
    echo -e "  $0                        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    echo -e "  $0 -t v1.0               # –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–≥"
    echo -e "  $0 -u myuser -r myapp -t v1.0"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        -u|--username)
            DOCKER_USERNAME="$2"
            shift 2
            ;;
        -r|--repository)
            REPOSITORY_NAME="$2"
            shift 2
            ;;
        -t|--tag)
            TAG="$2"
            shift 2
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1${NC}"
            show_help
            exit 1
            ;;
    esac
done

# –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–µ–Ω–∞ –æ–±—Ä–∞–∑–æ–≤ —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
LOCAL_IMAGE_NAME="$DOCKER_USERNAME/$REPOSITORY_NAME:$TAG"
REMOTE_IMAGE_NAME="$DOCKER_USERNAME/$REPOSITORY_NAME:$TAG"

echo -e "${YELLOW}üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –≤ Docker Hub...${NC}"
echo -e "${BLUE}üì¶ –û–±—Ä–∞–∑: $LOCAL_IMAGE_NAME${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∏–ª–∏ —Å–±–æ—Ä–∫–∞ —á–µ—Ä–µ–∑ docker compose
if [ ! "$(docker images -q $LOCAL_IMAGE_NAME)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ $LOCAL_IMAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}üî® –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–±–æ—Ä–∫–∞ —á–µ—Ä–µ–∑ docker compose...${NC}"
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —á–µ—Ä–µ–∑ docker compose
    docker compose build --no-cache
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞ —á–µ—Ä–µ–∑ docker compose!${NC}"
        exit 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º ID –æ–±—Ä–∞–∑–∞ –∏–∑ docker compose –∏ —Ç–µ–≥–∏—Ä—É–µ–º –µ–≥–æ
    SERVICE_IMAGE_ID=$(docker compose images -q backend)
    if [ -n "$SERVICE_IMAGE_ID" ]; then
        echo -e "${YELLOW}üè∑Ô∏è  –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞...${NC}"
        docker tag $SERVICE_IMAGE_ID $LOCAL_IMAGE_NAME
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –æ–±—Ä–∞–∑–∞ –∏–∑ docker compose!${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Docker Hub
echo -e "${YELLOW}üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Docker Hub...${NC}"
if ! docker info | grep -q "Username: $DOCKER_USERNAME"; then
    echo -e "${YELLOW}üîë –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Docker Hub...${NC}"
    docker login
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Docker Hub!${NC}"
        exit 1
    fi
fi

# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ Docker Hub
echo -e "${YELLOW}‚¨ÜÔ∏è  –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ Docker Hub...${NC}"
docker push $REMOTE_IMAGE_NAME

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Docker Hub!${NC}"
    echo -e "${GREEN}üåê –û–±—Ä–∞–∑ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://hub.docker.com/r/$DOCKER_USERNAME/$REPOSITORY_NAME${NC}"
    echo -e "${GREEN}üì¶ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: docker pull $REMOTE_IMAGE_NAME${NC}"
    echo
    echo -e "${BLUE}üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–º —Å–µ—Ä–≤–µ—Ä–µ:${NC}"
    echo -e "${BLUE}# –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫:${NC}"
    echo -e "${BLUE}docker run -d --name damage-detection -p 8000:8000 $REMOTE_IMAGE_NAME${NC}"
    echo -e "${BLUE}# –ò–ª–∏ —Å docker compose (–µ—Å–ª–∏ –µ—Å—Ç—å docker-compose.yml):${NC}"
    echo -e "${BLUE}docker compose pull && docker compose up -d${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—Ä–∞–∑–∞ –≤ Docker Hub!${NC}"
    exit 1
fi

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—Ä–∞–∑–µ
echo -e "${YELLOW}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–µ:${NC}"
docker images --filter "reference=$LOCAL_IMAGE_NAME" --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}" 