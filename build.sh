#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
IMAGE_NAME="auxxxxx/vnedreid2025-ml_model:latest"
SERVICE_NAME="backend"
PORT=8000

echo -e "${BLUE}üöÄ –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
echo -e "${BLUE}üì¶ –û–±—Ä–∞–∑: $IMAGE_NAME${NC}"
echo -e "${BLUE}üåê –ü–æ—Ä—Ç: $PORT${NC}"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker compose down --remove-orphans

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤...${NC}"
if [ "$(docker images -q $IMAGE_NAME)" ]; then
    docker rmi $IMAGE_NAME 2>/dev/null || true
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —á–µ—Ä–µ–∑ docker compose
echo -e "${YELLOW}üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —á–µ—Ä–µ–∑ docker compose...${NC}"
docker compose build --no-cache --pull

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞!${NC}"
    exit 1
fi

# –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
echo -e "${YELLOW}üè∑Ô∏è  –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞...${NC}"
SERVICE_IMAGE_ID=$(docker compose images -q $SERVICE_NAME 2>/dev/null)
if [ -n "$SERVICE_IMAGE_ID" ]; then
    docker tag $SERVICE_IMAGE_ID $IMAGE_NAME
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –∏ –∑–∞tag–∏—Ä–æ–≤–∞–Ω!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –æ–±—Ä–∞–∑–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...${NC}"
fi

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker compose up -d

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤!${NC}"
    echo -e "${YELLOW}üìã –õ–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:${NC}"
    docker compose logs $SERVICE_NAME
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "${YELLOW}üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
docker compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
for i in {1..5}; do
    if curl -s http://localhost:$PORT/docs > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω!${NC}"
        break
    else
        echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... –ø–æ–ø—ã—Ç–∫–∞ $i/5${NC}"
        sleep 3
    fi
    
    if [ $i -eq 5 ]; then
        echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ 5 –ø–æ–ø—ã—Ç–æ–∫${NC}"
        echo -e "${YELLOW}üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC}"
        docker compose logs --tail=20 $SERVICE_NAME
    fi
done

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo -e "${GREEN}üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${GREEN}üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:$PORT${NC}"
echo -e "${GREEN}üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:$PORT/model/docs${NC}"
echo -e "${GREEN}üîç –≠–Ω–¥–ø–æ–∏–Ω—Ç –∞–Ω–∞–ª–∏–∑–∞: POST http://localhost:$PORT/model/analyze${NC}"
echo -e "${GREEN}üîç –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç: POST http://localhost:$PORT/model/damage-detection/analyze${NC}"

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo -e "${YELLOW}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:${NC}"
docker compose logs --tail=10 $SERVICE_NAME

echo -e "${BLUE}üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./stop.sh${NC}"
echo -e "${BLUE}üí° –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Docker Hub: ./push.sh${NC}" 